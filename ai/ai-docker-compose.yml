services:
  db:
    image: postgres:14-alpine
    container_name: ai_postgres
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${AI_DB_HOST_PORT:-5252}:5432"
    volumes:
      - ai_pgdata:/var/lib/postgresql/data
    networks:
      - sandwich-net

  redis:
    image: redis:6-alpine
    container_name: ai_redis
    command: ["redis-server","--appendonly","yes"]
    ports:
      - "${AI_REDIS_HOST_PORT:-4242}:6379"
    volumes:
      - ai_redisdata:/data
    networks:
      - sandwich-net

  tools:
    build: .
    container_name: ai_tools
    volumes:
      - .:/app
    env_file: .env
    networks:
      - sandwich-net
    profiles: ["dev"]

  api-redis:
    build: .
    command: uvicorn src.api_redis.main:app --host 0.0.0.0 --port 8010
    ports:
      - "8010:8010"
    env_file: .env
    depends_on:
      - redis
    networks:
      - sandwich-net

# 1) Webdis: Redis <-> HTTP 브릿지
  webdis:
    image: nicolas/webdis:latest
    container_name: ai_webdis
    restart: always
    environment:

      REDIS_HOST: sandwich_redis
      REDIS_PORT: 6379
    networks:
      - sandwich-net


  # 2) NGINX: 외부 게이트웨이(보안키 검증 + CORS + 읽기전용 제한)
  ai-redis-gw:
    image: nginx:alpine
    container_name: ai_redis_gateway
    restart: always
    ports:
      - "9010:80"
    volumes:
      - ./nginx/redis-gateway.conf:/etc/nginx/nginx.conf:ro
      - ./nginx_secrets/ai_api_key.conf:/etc/nginx/secrets/ai_api_key.conf:ro
    depends_on:
      - webdis
    networks:
      - sandwich-net

networks:
  sandwich-net:
    external: true
    name: sandwich_sandwich-net

volumes:
  ai_pgdata:
  ai_redisdata:
